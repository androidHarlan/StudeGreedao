package com.harlan.lhc.studegreedao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.harlan.lhc.studegreedao.OneToOne.User;
import com.harlan.lhc.studegreedao.OneToOne.Student;
import com.harlan.lhc.studegreedao.OneToMany.Order;
import com.harlan.lhc.studegreedao.OneToMany.Customer;
import com.harlan.lhc.studegreedao.ManyToMany.TeacherBean;
import com.harlan.lhc.studegreedao.ManyToMany.StudentBean;
import com.harlan.lhc.studegreedao.ManyToMany.TeacherJoinStudentBean;

import com.harlan.lhc.studegreedao.gen.UserDao;
import com.harlan.lhc.studegreedao.gen.StudentDao;
import com.harlan.lhc.studegreedao.gen.OrderDao;
import com.harlan.lhc.studegreedao.gen.CustomerDao;
import com.harlan.lhc.studegreedao.gen.TeacherBeanDao;
import com.harlan.lhc.studegreedao.gen.StudentBeanDao;
import com.harlan.lhc.studegreedao.gen.TeacherJoinStudentBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig studentDaoConfig;
    private final DaoConfig orderDaoConfig;
    private final DaoConfig customerDaoConfig;
    private final DaoConfig teacherBeanDaoConfig;
    private final DaoConfig studentBeanDaoConfig;
    private final DaoConfig teacherJoinStudentBeanDaoConfig;

    private final UserDao userDao;
    private final StudentDao studentDao;
    private final OrderDao orderDao;
    private final CustomerDao customerDao;
    private final TeacherBeanDao teacherBeanDao;
    private final StudentBeanDao studentBeanDao;
    private final TeacherJoinStudentBeanDao teacherJoinStudentBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        studentDaoConfig = daoConfigMap.get(StudentDao.class).clone();
        studentDaoConfig.initIdentityScope(type);

        orderDaoConfig = daoConfigMap.get(OrderDao.class).clone();
        orderDaoConfig.initIdentityScope(type);

        customerDaoConfig = daoConfigMap.get(CustomerDao.class).clone();
        customerDaoConfig.initIdentityScope(type);

        teacherBeanDaoConfig = daoConfigMap.get(TeacherBeanDao.class).clone();
        teacherBeanDaoConfig.initIdentityScope(type);

        studentBeanDaoConfig = daoConfigMap.get(StudentBeanDao.class).clone();
        studentBeanDaoConfig.initIdentityScope(type);

        teacherJoinStudentBeanDaoConfig = daoConfigMap.get(TeacherJoinStudentBeanDao.class).clone();
        teacherJoinStudentBeanDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        studentDao = new StudentDao(studentDaoConfig, this);
        orderDao = new OrderDao(orderDaoConfig, this);
        customerDao = new CustomerDao(customerDaoConfig, this);
        teacherBeanDao = new TeacherBeanDao(teacherBeanDaoConfig, this);
        studentBeanDao = new StudentBeanDao(studentBeanDaoConfig, this);
        teacherJoinStudentBeanDao = new TeacherJoinStudentBeanDao(teacherJoinStudentBeanDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Student.class, studentDao);
        registerDao(Order.class, orderDao);
        registerDao(Customer.class, customerDao);
        registerDao(TeacherBean.class, teacherBeanDao);
        registerDao(StudentBean.class, studentBeanDao);
        registerDao(TeacherJoinStudentBean.class, teacherJoinStudentBeanDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        studentDaoConfig.getIdentityScope().clear();
        orderDaoConfig.getIdentityScope().clear();
        customerDaoConfig.getIdentityScope().clear();
        teacherBeanDaoConfig.getIdentityScope().clear();
        studentBeanDaoConfig.getIdentityScope().clear();
        teacherJoinStudentBeanDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public StudentDao getStudentDao() {
        return studentDao;
    }

    public OrderDao getOrderDao() {
        return orderDao;
    }

    public CustomerDao getCustomerDao() {
        return customerDao;
    }

    public TeacherBeanDao getTeacherBeanDao() {
        return teacherBeanDao;
    }

    public StudentBeanDao getStudentBeanDao() {
        return studentBeanDao;
    }

    public TeacherJoinStudentBeanDao getTeacherJoinStudentBeanDao() {
        return teacherJoinStudentBeanDao;
    }

}
